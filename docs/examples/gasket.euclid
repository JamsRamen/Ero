# Prints an Apollonian gasket with given initial circles to all circles with a radius greater than a given limit

import "olympiad"

A, B, C, alpha = read(), read(), read(), read()

gasket = (A, B, C, G, alpha) -> (G) {
    candidates = apollonius(A, B, C)
    
    for (candidate : candidates) {
        if (not G.contains(candidate) and (candidate is Line or candidate.radius() > alpha)) {
            G += [candidate]
            for ([a, b] in [A, B, C].choose(2))
                G = gasket(a, b, candidate, G, alpha)
        }
    }
}

print(gasket(A, B, C, [A, B, C], alpha))
